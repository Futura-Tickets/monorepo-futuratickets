{
  "name": "futuratickets-monorepo",
  "version": "0.1.0",
  "private": true,
  "engines": {
    "node": "22.17.0",
    "npm": ">=10.2.0"
  },
  "workspaces": [
    "futura-access-api",
    "futura-access-app",
    "futura-market-place-api",
    "futura-market-place-v2",
    "futura-paginator",
    "futura-tickets-access-app",
    "futura-tickets-admin",
    "futura-tickets-admin-api",
    "futura-tickets-contracts-v2",
    "futura-tickets-event",
    "futura-tickets-rest-api",
    "futura-tickets-web-access-app",
    "integrations-scripts"
  ],
  "dependencies": {
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@playwright/test": "^1.56.0",
    "migrate-mongo": "^12.1.3"
  },
  "scripts": {
    "bootstrap": "npm install --workspaces --if-present",
    "install:all": "npm install --legacy-peer-deps",
    "build": "npm run build --workspaces --if-present",
    "build:admin-api": "npm run build -w futura-tickets-admin-api",
    "build:marketplace-api": "npm run build -w futura-market-place-api",
    "build:access-api": "npm run build -w futura-access-api",
    "build:admin-web": "npm run build -w futura-tickets-admin",
    "build:marketplace-web": "npm run build -w futura-market-place-v2",
    "dev": "npm run dev --workspaces --if-present",
    "dev:admin-api": "npm run dev -w futura-tickets-admin-api",
    "dev:marketplace-api": "npm run dev -w futura-market-place-api",
    "dev:access-api": "npm run dev -w futura-access-api",
    "dev:admin-web": "npm run dev -w futura-tickets-admin",
    "dev:marketplace-web": "npm run dev -w futura-market-place-v2",
    "lint": "npm run lint --workspaces --if-present",
    "lint:fix": "npm run lint --workspaces --if-present -- --fix",
    "test": "npm run test --workspaces --if-present",
    "test:cov": "npm run test:cov --workspaces --if-present",
    "test:watch": "npm run test:watch --workspaces --if-present",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:e2e:marketplace": "playwright test e2e/marketplace",
    "test:e2e:admin": "playwright test e2e/admin",
    "test:e2e:access": "playwright test e2e/access",
    "migrate:status": "migrate-mongo status",
    "migrate:up": "migrate-mongo up",
    "migrate:down": "migrate-mongo down",
    "migrate:create": "migrate-mongo create",
    "migrate:list": "migrate-mongo status",
    "clean": "rm -rf node_modules package-lock.json && npm run clean --workspaces --if-present",
    "clean:install": "npm run clean && npm install --legacy-peer-deps",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix --legacy-peer-deps",
    "security:report": "npm audit --audit-level=low --json > security-report.json",
    "health-check": "./scripts/health-check-all.sh",
    "setup:hooks": "cp .git-hooks/pre-commit.template .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit",
    "start:infra": "./start-infra.sh",
    "start:all": "./start-all-dev.sh",
    "stop:all": "./stop-all-dev.sh",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md}\"",
    "typecheck": "tsc --noEmit --skipLibCheck"
  }
}
