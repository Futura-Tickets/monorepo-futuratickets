# FuturaTickets Environment Configuration Template
#
# IMPORTANT: This is a template file. DO NOT add real credentials here.
# Copy this file to .env and fill in your actual values.
#
# Usage:
#   cp .env.example .env
#   # Edit .env with your actual values
#
# NEVER commit .env files to git!

# ============================================
# Application Environment
# ============================================
NODE_ENV=development
# Options: development | staging | production

# ============================================
# Backend API Configuration
# ============================================

# Server
PORT=4101
API_BASE_URL=http://localhost:4101

# Database - MongoDB
MONGODB_URI=mongodb://localhost:27017/futuratickets
MONGODB_TEST_URI=mongodb://localhost:27017/futuratickets-test

# Authentication & Security
JWT_SECRET=your-super-secret-jwt-key-here-change-in-production
JWT_EXPIRES_IN=7d
SESSION_SECRET=your-session-secret-here-change-in-production
COOKIE_SECRET=your-cookie-secret-here-change-in-production

# Password Hashing
BCRYPT_ROUNDS=10

# CORS
CORS_ORIGIN=http://localhost:3000,http://localhost:3003,http://localhost:3007
# Comma-separated list of allowed origins

# ============================================
# Blockchain Configuration
# ============================================

# Ethereum/Polygon Network
BLOCKCHAIN_NETWORK=mumbai
# Options: mumbai (testnet) | polygon (mainnet) | localhost

BLOCKCHAIN_RPC_URL=https://rpc-mumbai.maticvigil.com
BLOCKCHAIN_CHAIN_ID=80001

# Wallet Configuration
DEPLOYER_PRIVATE_KEY=your-deployer-wallet-private-key
ADMIN_WALLET_ADDRESS=0x0000000000000000000000000000000000000000

# Smart Contract Addresses
NFT_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000
MARKETPLACE_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000
TICKET_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000

# Gas Configuration
GAS_LIMIT=3000000
GAS_PRICE=30

# ============================================
# External Services
# ============================================

# Email Service (e.g., SendGrid, AWS SES)
EMAIL_SERVICE=smtp
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=your-email@example.com
SMTP_PASSWORD=your-smtp-password
EMAIL_FROM=noreply@futuratickets.com

# File Storage (e.g., AWS S3, Cloudinary)
STORAGE_SERVICE=local
# Options: local | s3 | cloudinary

# AWS S3 (if using)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=futuratickets-assets

# Cloudinary (if using)
CLOUDINARY_CLOUD_NAME=your-cloud-name
CLOUDINARY_API_KEY=your-api-key
CLOUDINARY_API_SECRET=your-api-secret

# ============================================
# Payment Gateway
# ============================================

# Stripe
STRIPE_PUBLIC_KEY=pk_test_your_stripe_public_key
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# PayPal (optional)
PAYPAL_CLIENT_ID=your-paypal-client-id
PAYPAL_CLIENT_SECRET=your-paypal-client-secret
PAYPAL_MODE=sandbox
# Options: sandbox | live

# ============================================
# Third-Party Integrations
# ============================================

# Analytics
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Error Tracking - Sentry
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development

# Social Auth (optional)
# Backend Google OAuth
GOOGLE_CLIENT_ID=your-google-oauth-client-id
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret

# Frontend Google OAuth (SECURITY FIX: moved from hardcoded values)
NEXT_PUBLIC_GOOGLE_CLIENT_ID=your-google-oauth-client-id.apps.googleusercontent.com

FACEBOOK_APP_ID=your-facebook-app-id
FACEBOOK_APP_SECRET=your-facebook-app-secret

# ============================================
# Frontend Configuration
# ============================================

# Admin Panel
NEXT_PUBLIC_ADMIN_API_URL=http://localhost:4101/api
NEXT_PUBLIC_ADMIN_BASE_URL=http://localhost:3003

# Marketplace
NEXT_PUBLIC_MARKETPLACE_API_URL=http://localhost:4102/api
NEXT_PUBLIC_MARKETPLACE_BASE_URL=http://localhost:3000

# Feature Flags
NEXT_PUBLIC_ENABLE_BLOCKCHAIN=true
NEXT_PUBLIC_ENABLE_SOCIAL_LOGIN=false
NEXT_PUBLIC_ENABLE_ANALYTICS=true

# ============================================
# Development & Testing
# ============================================

# Debug
DEBUG=app:*
LOG_LEVEL=debug
# Options: error | warn | info | debug

# Testing
TEST_TIMEOUT=30000

# Mock Services (for development)
MOCK_BLOCKCHAIN=false
MOCK_PAYMENTS=false
MOCK_EMAIL=true

# ============================================
# CI/CD & Deployment
# ============================================

# Docker
COMPOSE_PROJECT_NAME=futuratickets

# Kubernetes (if applicable)
K8S_NAMESPACE=futuratickets-dev

# Deployment
DEPLOY_ENV=development
BUILD_NUMBER=local

# ============================================
# Rate Limiting & Security
# ============================================

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
# 15 minutes in milliseconds
RATE_LIMIT_MAX_REQUESTS=100

# Security Headers
HELMET_ENABLED=true
CONTENT_SECURITY_POLICY_ENABLED=true

# ============================================
# Monitoring & Health Checks
# ============================================

HEALTH_CHECK_ENABLED=true
METRICS_ENABLED=true
METRICS_PORT=9090

# ============================================
# Notes
# ============================================
#
# Security Best Practices:
# 1. Never commit .env files
# 2. Use different secrets for each environment
# 3. Rotate secrets regularly
# 4. Use strong, randomly generated secrets
# 5. Limit access to production secrets
# 6. Use environment-specific .env files (.env.production, .env.staging)
#
# To generate secure secrets, use:
#   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#   OR
#   openssl rand -hex 32
#
