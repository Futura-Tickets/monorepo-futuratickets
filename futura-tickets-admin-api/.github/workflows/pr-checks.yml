name: PR Checks - Admin API

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'futura-tickets-admin-api/**'

env:
  NODE_VERSION: '20.x'
  WORKING_DIRECTORY: futura-tickets-admin-api

jobs:
  pr-info:
    name: PR Information
    runs-on: ubuntu-latest

    steps:
      - name: PR Details
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            core.info(`PR #${pr.number}: ${pr.title}`);
            core.info(`Author: ${pr.user.login}`);
            core.info(`Base: ${pr.base.ref} <- Head: ${pr.head.ref}`);
            core.info(`Files changed: ${pr.changed_files}`);
            core.info(`Additions: ${pr.additions}, Deletions: ${pr.deletions}`);

  conventional-commits:
    name: Check Commit Messages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate commit messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlintrc.json

  pr-size:
    name: Check PR Size
    runs-on: ubuntu-latest

    steps:
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const changedFiles = pr.changed_files;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const totalChanges = additions + deletions;

            let size = 'XS';
            let label = 'size/XS';

            if (totalChanges > 1000) {
              size = 'XL';
              label = 'size/XL';
              core.warning(`⚠️ This PR is very large (${totalChanges} changes). Consider breaking it into smaller PRs.`);
            } else if (totalChanges > 500) {
              size = 'L';
              label = 'size/L';
              core.warning(`⚠️ This PR is large (${totalChanges} changes).`);
            } else if (totalChanges > 250) {
              size = 'M';
              label = 'size/M';
            } else if (totalChanges > 50) {
              size = 'S';
              label = 'size/S';
            }

            core.info(`PR Size: ${size} (${totalChanges} changes, ${changedFiles} files)`);

  test-coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci

      - name: Run tests with coverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run test:cov
        env:
          MONGO_URL: mongodb://admin:password@localhost:27017/test?authSource=admin
          REDIS_HOST: localhost

      - name: Comment coverage on PR
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ${{ env.WORKING_DIRECTORY }}/coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: Test Coverage Report

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          base-ref: ${{ github.event.pull_request.base.sha }}
          head-ref: ${{ github.event.pull_request.head.sha }}
