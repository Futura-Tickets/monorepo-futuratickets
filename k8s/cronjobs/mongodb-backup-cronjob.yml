apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-backup
  namespace: futuratickets
  labels:
    app: mongodb-backup
spec:
  # Run daily at 2 AM UTC
  schedule: "0 2 * * *"

  # Keep last 7 successful and 3 failed jobs
  successfulJobsHistoryLimit: 7
  failedJobsHistoryLimit: 3

  # Concurrency policy: don't run if previous backup is still running
  concurrencyPolicy: Forbid

  jobTemplate:
    metadata:
      labels:
        app: mongodb-backup
    spec:
      # Limit job runtime to 1 hour
      activeDeadlineSeconds: 3600

      # Keep completed pods for debugging (remove manually if needed)
      ttlSecondsAfterFinished: 86400  # 24 hours

      template:
        metadata:
          labels:
            app: mongodb-backup
        spec:
          restartPolicy: OnFailure

          containers:
          - name: mongodb-backup
            image: mongo:7.0
            imagePullPolicy: IfNotPresent

            command:
            - /bin/bash
            - -c
            - |
              set -e

              echo "Starting MongoDB backup at $(date)"

              # Create backup directory with timestamp
              BACKUP_DIR="/backup/$(date +%Y%m%d-%H%M%S)"
              mkdir -p "$BACKUP_DIR"

              # Run mongodump
              mongodump \
                --host=mongodb \
                --port=27017 \
                --username="$MONGO_USER" \
                --password="$MONGO_PASSWORD" \
                --authenticationDatabase=admin \
                --out="$BACKUP_DIR" \
                --gzip

              # Verify backup
              if [ $? -eq 0 ]; then
                echo "Backup completed successfully at $(date)"
                echo "Backup location: $BACKUP_DIR"

                # Calculate backup size
                BACKUP_SIZE=$(du -sh "$BACKUP_DIR" | cut -f1)
                echo "Backup size: $BACKUP_SIZE"

                # Count collections
                COLLECTION_COUNT=$(find "$BACKUP_DIR" -name "*.bson.gz" | wc -l)
                echo "Collections backed up: $COLLECTION_COUNT"
              else
                echo "Backup failed at $(date)"
                exit 1
              fi

              # Cleanup old backups (keep last 30 days)
              echo "Cleaning up old backups..."
              find /backup -maxdepth 1 -type d -name "[0-9]*" -mtime +30 -exec rm -rf {} \;

              # Show remaining backups
              echo "Remaining backups:"
              ls -lh /backup/ | grep "^d" | tail -10

              echo "Backup job completed at $(date)"

            env:
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: password

            volumeMounts:
            - name: backup-storage
              mountPath: /backup

            resources:
              requests:
                memory: "256Mi"
                cpu: "200m"
              limits:
                memory: "512Mi"
                cpu: "500m"

          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: mongodb-backup-pvc
