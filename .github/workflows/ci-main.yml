name: Production CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22.17.0'

jobs:
  lint-and-build:
    name: Lint & Build All Projects
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - name: admin-api
            path: futura-tickets-admin-api
          - name: admin-frontend
            path: futura-tickets-admin
          - name: marketplace
            path: futura-market-place-v2

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project.path }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.project.path }}
        run: npm ci

      - name: Run ESLint
        working-directory: ${{ matrix.project.path }}
        run: npm run lint

      - name: Build project
        working-directory: ${{ matrix.project.path }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project.name }}-production-build
          path: |
            ${{ matrix.project.path }}/dist
            ${{ matrix.project.path }}/.next
          retention-days: 30

  create-release:
    name: Create Release Tag
    runs-on: ubuntu-latest
    needs: lint-and-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version
        id: version
        run: |
          VERSION=$(date +%Y.%m.%d)-${{ github.run_number }}
          echo "version=v$VERSION" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push origin ${{ steps.version.outputs.version }}

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [lint-and-build, create-release]
    if: always() && github.event_name == 'push'

    steps:
      - name: Build status
        run: |
          if [ "${{ needs.lint-and-build.result }}" == "success" ]; then
            echo "‚úÖ Production deployment successful!"
            echo "üè∑Ô∏è Release tag: ${{ needs.create-release.outputs.version }}"
          else
            echo "‚ùå Production deployment failed!"
            exit 1
          fi
