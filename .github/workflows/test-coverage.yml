name: Test & Coverage

on:
  push:
    branches: [main, dev, staging]
  pull_request:
    branches: [main, dev]

jobs:
  test-admin-api:
    name: Test Admin API
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping:1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        working-directory: ./futura-tickets-admin-api
        run: npm run test:cov
        env:
          MONGO_URL: mongodb://localhost:27017/futura-test
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./futura-tickets-admin-api/coverage/lcov.info
          flags: admin-api
          name: admin-api-coverage
          fail_ci_if_error: false

  test-marketplace-api:
    name: Test Marketplace API
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping:1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        working-directory: ./futura-market-place-api
        run: npm run test:cov
        env:
          MONGO_URL: mongodb://localhost:27017/futura-test
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./futura-market-place-api/coverage/lcov.info
          flags: marketplace-api
          name: marketplace-api-coverage
          fail_ci_if_error: false

  test-access-api:
    name: Test Access API
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping:1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        working-directory: ./futura-access-api
        run: npm run test:cov
        env:
          MONGO_URL: mongodb://localhost:27017/futura-test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./futura-access-api/coverage/lcov.info
          flags: access-api
          name: access-api-coverage
          fail_ci_if_error: false

  coverage-report:
    name: Coverage Report Summary
    runs-on: ubuntu-latest
    needs: [test-admin-api, test-marketplace-api, test-access-api]
    if: always()

    steps:
      - name: Generate Summary
        run: |
          echo "## ðŸ“Š Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Admin API: Tests completed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Marketplace API: Tests completed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Access API: Tests completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“ˆ View detailed coverage: [Codecov Dashboard](https://codecov.io/gh/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
